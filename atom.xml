<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jane&#39;StudyHome</title>
  
  <subtitle>NAOrobots and I,forever.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sisterChen.github.io/"/>
  <updated>2018-07-10T03:33:52.541Z</updated>
  <id>https://sisterChen.github.io/</id>
  
  <author>
    <name>chenfanghui</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>the introduction of some important files</title>
    <link href="https://sisterChen.github.io/2018/07/05/the-introduction-of-some-important-files/"/>
    <id>https://sisterChen.github.io/2018/07/05/the-introduction-of-some-important-files/</id>
    <published>2018-07-04T22:25:40.000Z</published>
    <updated>2018-07-10T03:33:52.541Z</updated>
    
    <content type="html"><![CDATA[<h1 id="modules-representation"><a href="#modules-representation" class="headerlink" title="modules/representation"></a><strong>modules/representation</strong></h1><h2 id="（一）BehaviorControl文件"><a href="#（一）BehaviorControl文件" class="headerlink" title="（一）BehaviorControl文件"></a>（一）BehaviorControl文件</h2><pre><code>此文件包含相机控制，led控制，手部控制，头部控制，运动控制</code></pre><h3 id="BehaviorControl-2015文件夹"><a href="#BehaviorControl-2015文件夹" class="headerlink" title="BehaviorControl|2015文件夹"></a>BehaviorControl|2015文件夹</h3><pre><code>    ☆ BehaviorControl.h定义了BehaviorControl模块，通过头文件获取很多参数，这个模块可提供接口数据：        PROVIDES(ActivationGraph)--激活图        PROVIDES(ArmMotionRequest)--手臂动作        PROVIDES(BehaviorLEDRequest)--led控制        PROVIDES(MotionRequest)--运动控制        PROVIDES(BehaviorStatus)--行为状态        PROVIDES(HeadMotionRequest)--头部运动        PROVIDES(SPLStandardBehaviorStatus)--标准平台状态    △ 2015版的BehaviorControl}2015.h    定义了一个命名空间Behavior2015，声明了类behaviorControlData，该类声明了多个成员    并调用他们的默认构造函数实时传递参数修改，以下是他包含的重要成员：        1、BehaviorStatus&amp; theBehaviorStatus;        BehaviorStatus流类给角色赋初值striker.        ((Role) RoleType)(Role::striker) role,        Role流类定义了(RoleType)(striker) role,        给出一个draw（）函数，该函数在role.cpp有实现，用于调试。        给出枚举RoleType            ENUM(RoleType,            {,    undefined,                keeper,                striker,                defender,                supporter,                none,});        2、MotionRequest&amp;theMotionRequest;        MotionRequest流类定义了：            (Motion)(specialAciton)motion,            (SpecialAcitonRequest)specialActionRequest,            (WalkRequest)walkRequest,            (KickRequest)kickRequest,        还定义了motion枚举变量，并定义了printout函数，该函数根据motion情况进行字符串输出，在represtation/motionRequest.cpp有定义</code></pre><h3 id="Option文件夹"><a href="#Option文件夹" class="headerlink" title="Option文件夹"></a>Option文件夹</h3><pre><code>        ☆ #include&quot;Options/Soccer.h&quot;        ① 默认开始played状态，关闭所有关节        ② 随后开始standup状态，站起来，进入playsoccer状态        ③ 开始执行HandlePenaltyState(); HeadControl();        胸键变颜色，按三次蹲下，并且进入playdead状态，胸键变色        △ #include&quot;Option/GameControl/HandleGameState.h&quot;        控制游戏状态        ☆ #include&quot;Options/GameControl/HandlePenaltyState.h&quot;        控制惩罚状态        △ #include&quot;Options/GameControl/PlayingState.h&quot;        正在运行的决策状态        ☆ #include&quot;Options/GameControl/ReadyState.h&quot;        准备状态        △ #include&quot;Options/HeadControl/HeadControl/h        头部状态        ☆ #include &quot;Options/Output/Annotation.h&quot;        发送注释信息        △ #include &quot;Options/     Output/ArmMotionRequest/KeyFrameArms.h&quot;        执行手部动作        ☆ #include &quot;Options/Output/HeadMotionRequest/SetHeadPanTilt.h&quot;        △ #include &quot;Options/Output/HeadMotionRequest/SetHeadTarget.h&quot;        ☆ #include &quot;Options/Output/HeadMotionRequest/SetHeadTargetOnGround.h&quot;        执行头部动作        △ #include &quot;Options/Output/MotionRequest/GetUpEngine.h&quot;        站起来        ☆ #include &quot;Options/Output/MotionRequest/InWalkKick.h&quot;        边走边踢            theMotionRequest.walkRequest.mode = WalkRequest::targetMode;         △ #include &quot;Options/Output/MotionRequest/PathToTarget.h&quot;        目标路径执行        ☆ #include &quot;Options/Output/MotionRequest/SpecialAction.h&quot;        执行特殊动作        △ #include &quot;Options/Output/MotionRequest/Stand.h&quot;        站起来        ☆ #include &quot;Options/Output/MotionRequest/WalkAtSpeed.h&quot;        走路速度        △ #include &quot;Options/Output/MotionRequest/WalkAtSpeedPercentage.h&quot;        走路百分比速度        ☆ #include &quot;Options/Output/MotionRequest/WalkToTarget.h&quot;        走路目标模式        △ #include &quot;Options/Output/PlaySound.h&quot;        播放声音        ☆ #include &quot;Options/Roles/Striker.h&quot;        前锋决策            Start--- turnToBall            searchForBall            walkToBall 走向球            alignToGoal 机器人与球保持保持一条直线            alignBehindBall 机器人在球后面            kick 踢球        △ #include &quot;Options/Skills/ArmContact.h&quot;        手部动作        ENUM(PushDirection,          {,N,    /**&lt; Arm is being pushed to the front */S,    /**&lt; Arm is being pushed to the back */W,    /**&lt; Arm is being pushed to the left */E,    /**&lt; Arm is being pushed to the right */NW,   /**&lt; Arm is being pushed to the front and the left */NE,   /**&lt; Arm is being pushed to the front and the right */SW,   /**&lt; Arm is being pushed to the back and the left */SE,   /**&lt; Arm is being pushed to the back and the right */NONE, /**&lt; If no contact is detected */}),        △ #include &quot;Options/Skills/GetUp.h&quot;        倒下站起来        ☆ #include &quot;Options/Tools/ButtonPressedAndReleased.h&quot;        胸前按钮</code></pre><h2 id="（二）Tool-motion-mofcompile"><a href="#（二）Tool-motion-mofcompile" class="headerlink" title="（二）Tool/motion/mofcompile"></a>（二）Tool/motion/mofcompile</h2><p><font color="#FF0000"> 负责对config/mof下的特殊动作进行解释执行 </font></p><h2 id="（三）MotionControl"><a href="#（三）MotionControl" class="headerlink" title="（三）MotionControl"></a>（三）MotionControl</h2><h4 id="三大运动控制"><a href="#三大运动控制" class="headerlink" title="三大运动控制"></a>三大运动控制</h4><pre><code>walk走路，kick踢球，DynamicMotionPrimitive Kick动态踢球</code></pre><h4 id="其他运动控制"><a href="#其他运动控制" class="headerlink" title="其他运动控制"></a>其他运动控制</h4><pre><code>ArmKeyFrame 手臂动作运动，getup起立，headmotion头部运动控制CalibrationStand站立运动，specialAction特殊动作等</code></pre><h2 id="（四）Configuration"><a href="#（四）Configuration" class="headerlink" title="（四）Configuration"></a>（四）Configuration</h2><h3 id="有关机器人的配置信息"><a href="#有关机器人的配置信息" class="headerlink" title="有关机器人的配置信息"></a>有关机器人的配置信息</h3><pre><code>FrictionLearner 摩擦力学习AutomaticCameraCailbrator 相机自动校准JointCalibrator 关节校准CognitionConfigurationDataProvider 提供认知配置数据MotionConfigurationDataProvider 提供运动配置数据</code></pre><h3 id="对应representations-Configuration配置文件"><a href="#对应representations-Configuration配置文件" class="headerlink" title="对应representations/Configuration配置文件"></a><em>对应representations/Configuration配置文件</em></h3><h2 id="（五）Modules-ifrastructure基础架构"><a href="#（五）Modules-ifrastructure基础架构" class="headerlink" title="（五）Modules/ifrastructure基础架构"></a>（五）Modules/ifrastructure基础架构</h2><h3 id="modules中包含各种数据提供者"><a href="#modules中包含各种数据提供者" class="headerlink" title="modules中包含各种数据提供者"></a>modules中包含各种数据提供者</h3><h3 id="representation中包含数据信息的定义和处理"><a href="#representation中包含数据信息的定义和处理" class="headerlink" title="representation中包含数据信息的定义和处理"></a>representation中包含数据信息的定义和处理</h3><h2 id="（六）Modules-Perception"><a href="#（六）Modules-Perception" class="headerlink" title="（六）Modules/Perception"></a>（六）Modules/Perception</h2><h3 id="感知检测球门和球场边界线，捕捉足球的视觉信息"><a href="#感知检测球门和球场边界线，捕捉足球的视觉信息" class="headerlink" title="感知检测球门和球场边界线，捕捉足球的视觉信息"></a><font color="#FF8C69">感知检测球门和球场边界线，捕捉足球的视觉信息</font></h3><pre><code>Ballperceptor球的视觉识别球的位置视觉识别身体轮廓位置视觉识别摄像头矩阵，用于创建坐标系图像。坐标系视觉识别场地边线视觉识别白线点识别障碍物识别点球标记识别球员识别潜在线点识别真实球识别机器人相机矩阵，用于计算身体轮廓whiteGaolperceptor白球门识别</code></pre><h2 id="（七）Modules-Modeling建模"><a href="#（七）Modules-Modeling建模" class="headerlink" title="（七）Modules/Modeling建模"></a>（七）Modules/Modeling建模</h2><h3 id="通过机器人获取的视觉信息决定机器人在球场的位置和与球门的相对位置，足球的职位和速度，障碍物模型，里程计算"><a href="#通过机器人获取的视觉信息决定机器人在球场的位置和与球门的相对位置，足球的职位和速度，障碍物模型，里程计算" class="headerlink" title="通过机器人获取的视觉信息决定机器人在球场的位置和与球门的相对位置，足球的职位和速度，障碍物模型，里程计算"></a>通过机器人获取的视觉信息决定机器人在球场的位置和与球门的相对位置，足球的职位和速度，障碍物模型，里程计算</h3><h2 id="（八）Sensing数据采集"><a href="#（八）Sensing数据采集" class="headerlink" title="（八）Sensing数据采集"></a>（八）Sensing数据采集</h2><h3 id="用于实施收集机器人传感器数据"><a href="#用于实施收集机器人传感器数据" class="headerlink" title="用于实施收集机器人传感器数据"></a>用于实施收集机器人传感器数据</h3>]]></content>
    
    <summary type="html">
    
      Bhuman的文件之间有着密切的联系，基于此才能顺利改进源代码
    
    </summary>
    
      <category term="home" scheme="https://sisterChen.github.io/categories/home/"/>
    
    
      <category term="Bhuman_files" scheme="https://sisterChen.github.io/tags/Bhuman-files/"/>
    
  </entry>
  
  <entry>
    <title>a robot connects with a routiner</title>
    <link href="https://sisterChen.github.io/2018/07/03/a-robot-connects-with-a-routiner/"/>
    <id>https://sisterChen.github.io/2018/07/03/a-robot-connects-with-a-routiner/</id>
    <published>2018-07-02T22:14:28.000Z</published>
    <updated>2018-07-02T12:10:32.639Z</updated>
    
    <content type="html"><![CDATA[<h1 id="（一）配置路由器"><a href="#（一）配置路由器" class="headerlink" title="（一）配置路由器"></a>（一）配置路由器</h1><h2 id="1、查看DHCP服务器中的IP地址："><a href="#1、查看DHCP服务器中的IP地址：" class="headerlink" title="1、查看DHCP服务器中的IP地址："></a>1、查看DHCP服务器中的IP地址：</h2><pre><code>路由器默认自动分配的IP地址在    192.168.1.100~192.168.1.199</code></pre><p><img src="http://a2.qpic.cn/psb?/V11tdl404OQmio/eY99aRGu4kvgb89Kr3mwSnIhd.CmYaIOiNH3nkVIXl8!/m/dDEBAAAAAAAAnull&amp;bo=*gIhAgAAAAADB*0!&amp;rf=photolist&amp;t=5" alt=""></p><h2 id="2、机器人刷机（网线）后IP地址："><a href="#2、机器人刷机（网线）后IP地址：" class="headerlink" title="2、机器人刷机（网线）后IP地址："></a>2、机器人刷机（网线）后IP地址：</h2><pre><code>如 192.168.3.2</code></pre><h3 id="！此时路由器不能连接机器人"><a href="#！此时路由器不能连接机器人" class="headerlink" title="！此时路由器不能连接机器人"></a>！此时路由器不能连接机器人</h3><h2 id="3、手动配置DHCP服务器，将地址池地址放大"><a href="#3、手动配置DHCP服务器，将地址池地址放大" class="headerlink" title="3、手动配置DHCP服务器，将地址池地址放大"></a>3、手动配置DHCP服务器，将地址池地址放大</h2><pre><code>如 192.168.3.199</code></pre><h3 id="！此时有错误提示：地址池结束地址非法"><a href="#！此时有错误提示：地址池结束地址非法" class="headerlink" title="！此时有错误提示：地址池结束地址非法"></a>！此时有错误提示：地址池结束地址非法</h3><p><img src="http://a2.qpic.cn/psb?/V11tdl404OQmio/PbejrTiIgpoLmKO7iBlXlQDkFK27Rq1nEHwySLJ3Te8!/m/dC0BAAAAAAAAnull&amp;bo=9AIkAgAAAAADB*I!&amp;rf=photolist&amp;t=5" alt=""></p><h2 id="4、更改路由器的LAN口设置"><a href="#4、更改路由器的LAN口设置" class="headerlink" title="4、更改路由器的LAN口设置"></a>4、更改路由器的LAN口设置</h2><pre><code>因此时子网掩码为255.255.255.0，故路由器分配的合法IP必须为192.168.1.*格式更改掩码为255.255.0.0，即可重新配置DHCP服务器中地址池结束地址</code></pre><p><img src="http://a2.qpic.cn/psb?/V11tdl404OQmio/3fuMwjkmqnm4hhLdAhxHNfWGe921Jxx*txDAywMt6xU!/m/dEUBAAAAAAAAnull&amp;bo=.AIfAgAAAAADB8U!&amp;rf=photolist&amp;t=5" alt=""></p><h2 id="5、DCHP服务器地址池结束地址改为：如192-168-3-199"><a href="#5、DCHP服务器地址池结束地址改为：如192-168-3-199" class="headerlink" title="5、DCHP服务器地址池结束地址改为：如192.168.3.199"></a>5、DCHP服务器地址池结束地址改为：如192.168.3.199</h2><h1 id="（二）问题来了：如何让机器人记住无线网络？"><a href="#（二）问题来了：如何让机器人记住无线网络？" class="headerlink" title="（二）问题来了：如何让机器人记住无线网络？"></a>（二）问题来了：如何让机器人记住无线网络？</h1><h2 id="在Install-Network-Profiles-default中设置"><a href="#在Install-Network-Profiles-default中设置" class="headerlink" title="在Install/Network/Profiles/default中设置"></a><em>在Install/Network/Profiles/default中设置</em></h2><pre><code>在network下，更改：ssid=&quot;无线网名称&quot;，psk=&quot;无线网密码&quot;</code></pre><h1 id="△-以上更改在机器人刷机前完成，即在-installRobot-192-168-x-y前完成"><a href="#△-以上更改在机器人刷机前完成，即在-installRobot-192-168-x-y前完成" class="headerlink" title="△ 以上更改在机器人刷机前完成，即在./installRobot 192.168.x.y前完成"></a><strong>△ 以上更改在机器人刷机前完成，即在./installRobot 192.168.x.y前完成</strong></h1><h1 id="（三）刷机后，无线网络分配给机器人的IP为：10-0-x-y-x-队伍号、y-成员号"><a href="#（三）刷机后，无线网络分配给机器人的IP为：10-0-x-y-x-队伍号、y-成员号" class="headerlink" title="（三）刷机后，无线网络分配给机器人的IP为：10.0.x.y(x:队伍号、y:成员号)"></a>（三）刷机后，无线网络分配给机器人的IP为：<strong>10.0.x.y(x:队伍号、y:成员号)</strong></h1><h1 id="（四）更改电脑的网络配置"><a href="#（四）更改电脑的网络配置" class="headerlink" title="（四）更改电脑的网络配置"></a>（四）更改电脑的网络配置</h1><pre><code>编辑新以太网，在IPv4设置-手动，地址：10.0.7.8，子网掩码：16</code></pre><p><img src="http://a2.qpic.cn/psb?/V11tdl404OQmio/*S1fpNl1TZDM47T1HjUvjZnGGPeYdpkv82IshbExoEc!/m/dFUAAAAAAAAAnull&amp;bo=ggEFAgAAAAADB6Y!&amp;rf=photolist&amp;t=5" alt=""></p><h1 id="（五）-copyfiles-Develop后IP是10-0-x-y，而非192-168-x-y"><a href="#（五）-copyfiles-Develop后IP是10-0-x-y，而非192-168-x-y" class="headerlink" title="（五）./copyfiles Develop后IP是10.0.x.y，而非192.168.x.y"></a>（五）./copyfiles Develop后IP是<strong>10.0.x.y</strong>，而非<em>192.168.x.y</em></h1>]]></content>
    
    <summary type="html">
    
      机器人连接路由器及机器人通过路由器刷机
    
    </summary>
    
      <category term="home" scheme="https://sisterChen.github.io/categories/home/"/>
    
    
      <category term="Bhuman_connection" scheme="https://sisterChen.github.io/tags/Bhuman-connection/"/>
    
  </entry>
  
  <entry>
    <title>Modules and representations</title>
    <link href="https://sisterChen.github.io/2018/07/01/Modules-and-representations/"/>
    <id>https://sisterChen.github.io/2018/07/01/Modules-and-representations/</id>
    <published>2018-07-01T03:52:07.000Z</published>
    <updated>2018-07-01T10:55:00.296Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Module-大框架"><a href="#Module-大框架" class="headerlink" title="Module 大框架"></a><em>Module 大框架</em></h1><pre><code>模块分为两个部分：requirements和representations一个模块包含一个或多个requirements和representations一个representations只能由一个模块更新</code></pre><h1 id="Module之模块定义"><a href="#Module之模块定义" class="headerlink" title="Module之模块定义"></a><em>Module之模块定义</em></h1><pre><code>定义每个模块都分别使用宏命令REQUIRES和PROVIDES</code></pre><h1 id="Module之更新"><a href="#Module之更新" class="headerlink" title="Module之更新"></a><em>Module之更新</em></h1><pre><code>motion (运动系统) 或cognition(感知系统) 的moduleMangager::update主要作用就是将providers构造出来，即属于motion(或者cognition)的模块创建出来</code></pre><h3 id="在ModuleManager-h文件中可以找到-↑-amp-↓"><a href="#在ModuleManager-h文件中可以找到-↑-amp-↓" class="headerlink" title="在ModuleManager.h文件中可以找到 ↑&amp;↓"></a>在ModuleManager.h文件中可以找到 ↑&amp;↓</h3><pre><code>函数&quot;calcShared&quot;(部分提取)作用：    1、传递到sortProvider中作为算法输入    2、在使用simulatot进行模块的调试时，不同进程中的模块通信通过stream进行传递，    机器人程序是线程的，因此不需要考虑shared中的stream    (注：在机器人和simulator中，motion和cognition都只是作为线程运行的)函数&quot;sortProvider&quot;作用：    将providers进行排序，解决模块之间的依赖关系    e.g A模块提供(PROVIDERS)给B模块(representation)，     而 A模块需要(REQUIRES)C模块的提供(PROVIDERS)repreentation     即C→A→B以上俩个重点函数仅仅是motion(或cognition)中的模块之间的依赖关系；模块的顺序，是依靠representation的依赖关系来决定的。PS:以上可以参考BHuman文档中的模块关系图，再对照Modules中的每个具体模块，查看模块定义的部分。</code></pre><h2 id="问题来了：motion与cognition之间更新顺序如何考虑"><a href="#问题来了：motion与cognition之间更新顺序如何考虑" class="headerlink" title="问题来了：motion与cognition之间更新顺序如何考虑"></a>问题来了：motion与cognition之间更新顺序如何考虑</h2><pre><code>motion与cognition是作为线程运行的，通过timeStamp同步进行，模块之间通过shared交流。motion运行速度为10ms运行一次，cognition为是33ms运行一次。二者并发进行，当motion需要用到cognition中的模块一定最新的，不需要考虑更新顺序。</code></pre><h1 id="整个process框架仅仅是为了调试或者实现进程而添加的"><a href="#整个process框架仅仅是为了调试或者实现进程而添加的" class="headerlink" title="整个process框架仅仅是为了调试或者实现进程而添加的"></a><strong>整个process框架仅仅是为了调试或者实现进程而添加的</strong></h1><h2 id="参数setEventID：设置时间条件，到了一定的时间就切换"><a href="#参数setEventID：设置时间条件，到了一定的时间就切换" class="headerlink" title="参数setEventID：设置时间条件，到了一定的时间就切换"></a>参数setEventID：设置时间条件，到了一定的时间就切换</h2><h2 id="参数timeStamp：用于进程通信或调试"><a href="#参数timeStamp：用于进程通信或调试" class="headerlink" title="参数timeStamp：用于进程通信或调试"></a>参数timeStamp：用于进程通信或调试</h2>]]></content>
    
    <summary type="html">
    
      模块和表征之间的联系及运用
    
    </summary>
    
      <category term="home" scheme="https://sisterChen.github.io/categories/home/"/>
    
    
      <category term="Bhuman" scheme="https://sisterChen.github.io/tags/Bhuman/"/>
    
  </entry>
  
  <entry>
    <title>B-Human framework</title>
    <link href="https://sisterChen.github.io/2018/06/30/B-Human-framework/"/>
    <id>https://sisterChen.github.io/2018/06/30/B-Human-framework/</id>
    <published>2018-06-30T02:47:17.000Z</published>
    <updated>2018-06-30T15:38:42.239Z</updated>
    
    <content type="html"><![CDATA[<h1 id="动作相关的几个引擎"><a href="#动作相关的几个引擎" class="headerlink" title="动作相关的几个引擎"></a>动作相关的几个引擎</h1><h3 id="ArmMotionEngine"><a href="#ArmMotionEngine" class="headerlink" title="ArmMotionEngine"></a>ArmMotionEngine</h3><h3 id="GetUpEngine"><a href="#GetUpEngine" class="headerlink" title="GetUpEngine"></a>GetUpEngine</h3><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><h2 id="SimRobot"><a href="#SimRobot" class="headerlink" title="SimRobot"></a>SimRobot</h2><h3 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a>虚拟环境</h3><h2 id="Bush"><a href="#Bush" class="headerlink" title="Bush"></a>Bush</h2><h3 id="部署代码"><a href="#部署代码" class="headerlink" title="部署代码"></a>部署代码</h3><h3 id="设置机器"><a href="#设置机器" class="headerlink" title="设置机器"></a>设置机器</h3><h2 id="GameController-担当裁判的功能"><a href="#GameController-担当裁判的功能" class="headerlink" title="GameController ##   担当裁判的功能"></a>GameController ##   担当裁判的功能</h2><h1 id="BHuman的使用"><a href="#BHuman的使用" class="headerlink" title="BHuman的使用"></a>BHuman的使用</h1><h2 id="在NAO中部署libhuamn"><a href="#在NAO中部署libhuamn" class="headerlink" title="在NAO中部署libhuamn"></a><em>在NAO中部署libhuamn</em></h2><h3 id="1、准备NaoQi"><a href="#1、准备NaoQi" class="headerlink" title="1、准备NaoQi"></a>1、准备NaoQi</h3><h3 id="2、创建配置"><a href="#2、创建配置" class="headerlink" title="2、创建配置"></a>2、创建配置</h3><h3 id="3、管理无线网络配置"><a href="#3、管理无线网络配置" class="headerlink" title="3、管理无线网络配置"></a>3、管理无线网络配置</h3><h3 id="4、安装-编辑器sublime、JAVA环境等"><a href="#4、安装-编辑器sublime、JAVA环境等" class="headerlink" title="4、安装(编辑器sublime、JAVA环境等)"></a>4、安装(编辑器sublime、JAVA环境等)</h3><h3 id="5、将编译好的代码拷贝到NAO中"><a href="#5、将编译好的代码拷贝到NAO中" class="headerlink" title="5、将编译好的代码拷贝到NAO中"></a>5、将编译好的代码拷贝到NAO中</h3><h3 id="6、控制NAO中的Bhuman"><a href="#6、控制NAO中的Bhuman" class="headerlink" title="6、控制NAO中的Bhuman"></a>6、控制NAO中的Bhuman</h3><h2 id="SimRobot的使用"><a href="#SimRobot的使用" class="headerlink" title="SimRobot的使用"></a>SimRobot的使用</h2><h2 id="机器人的校准"><a href="#机器人的校准" class="headerlink" title="机器人的校准"></a>机器人的校准</h2><h3 id="1、颜色校准"><a href="#1、颜色校准" class="headerlink" title="1、颜色校准"></a>1、颜色校准</h3><h3 id="2、场地校准"><a href="#2、场地校准" class="headerlink" title="2、场地校准"></a>2、场地校准</h3><h3 id="3、关节校准"><a href="#3、关节校准" class="headerlink" title="3、关节校准"></a>3、关节校准</h3><h2 id="启动NaoQi和Bhuman"><a href="#启动NaoQi和Bhuman" class="headerlink" title="启动NaoQi和Bhuman"></a>启动NaoQi和Bhuman</h2><h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a><em>核心概念</em></h2><h3 id="Module"><a href="#Module" class="headerlink" title="Module"></a>Module</h3><h3 id="Representation"><a href="#Representation" class="headerlink" title="Representation"></a>Representation</h3><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><h2 id="几个关注点"><a href="#几个关注点" class="headerlink" title="几个关注点"></a><em>几个关注点</em></h2><h3 id="通讯机制-Message-Queues"><a href="#通讯机制-Message-Queues" class="headerlink" title="通讯机制(Message Queues)"></a>通讯机制(Message Queues)</h3><h4 id="1、Inter-process-communication"><a href="#1、Inter-process-communication" class="headerlink" title="1、Inter-process communication"></a>1、Inter-process communication</h4><h4 id="2、debug-communication"><a href="#2、debug-communication" class="headerlink" title="2、debug communication"></a>2、debug communication</h4><h4 id="3、team-communication"><a href="#3、team-communication" class="headerlink" title="3、team communication"></a>3、team communication</h4><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h4><h2 id="BHuman的工作方式"><a href="#BHuman的工作方式" class="headerlink" title="BHuman的工作方式"></a><em>BHuman的工作方式</em></h2><h3 id="Cognition-认知系统"><a href="#Cognition-认知系统" class="headerlink" title="Cognition(认知系统)"></a>Cognition(认知系统)</h3><h4 id="1、Perception-感知子系统"><a href="#1、Perception-感知子系统" class="headerlink" title="1、Perception(感知子系统)"></a>1、Perception(感知子系统)</h4><pre><code>提供信息    标志点        目标        边界线        球的位置和速度算法策略    颜色表        NAO形体轮廓        分段与区域构建        区域辨别    边界检测        目标检测        球检测        其他NAO机器人检测</code></pre><h4 id="2、Model-模型子系统"><a href="#2、Model-模型子系统" class="headerlink" title="2、Model(模型子系统)"></a>2、Model(模型子系统)</h4><pre><code>自我定位        球的跟踪障碍物建模（视觉判断、超声波定位、胳臂碰触定位、对方模型定位</code></pre><h4 id="3、Behavior-Control-行为控制子系统"><a href="#3、Behavior-Control-行为控制子系统" class="headerlink" title="3、Behavior Control(行为控制子系统)"></a><strong>3、Behavior Control(行为控制子系统)</strong></h4><pre><code>CABSL        Option        Library        角色(Roles)身体控制        头部控制        路径规划</code></pre><h3 id="Motion-运动系统"><a href="#Motion-运动系统" class="headerlink" title="Motion(运动系统)"></a>Motion(运动系统)</h3><h4 id="1、Sensing（数据采集"><a href="#1、Sensing（数据采集" class="headerlink" title="1、Sensing（数据采集)"></a>1、Sensing（数据采集)</h4><h4 id="2、Motion-Control-关节控制"><a href="#2、Motion-Control-关节控制" class="headerlink" title="2、Motion Control (关节控制)"></a>2、Motion Control (关节控制)</h4><pre><code>行走        特殊动作        爬起        跟球    动作合并        头部控制        胳臂控制</code></pre><h1 id="系统结构"><a href="#系统结构" class="headerlink" title="系统结构"></a>系统结构</h1><h2 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h2><h2 id="工具集"><a href="#工具集" class="headerlink" title="工具集"></a>工具集</h2><pre><code>Bush(查看机器人的当前情况)     Copyfiles(把代码拷进相应的机器人上)</code></pre><h2 id="libbhuman"><a href="#libbhuman" class="headerlink" title="libbhuman"></a>libbhuman</h2><h2 id="libgamectrl"><a href="#libgamectrl" class="headerlink" title="libgamectrl"></a>libgamectrl</h2><pre><code>一个共享库，用来与GameController通讯</code></pre><h2 id="libqxt"><a href="#libqxt" class="headerlink" title="libqxt"></a>libqxt</h2><h2 id="Nao"><a href="#Nao" class="headerlink" title="Nao"></a>Nao</h2><h2 id="qtpropertybrowse"><a href="#qtpropertybrowse" class="headerlink" title="qtpropertybrowse"></a>qtpropertybrowse</h2><h2 id="SimRobot-1"><a href="#SimRobot-1" class="headerlink" title="SimRobot"></a><strong>SimRobot</strong></h2><h3 id="1、SimRobotCore-与平台无关"><a href="#1、SimRobotCore-与平台无关" class="headerlink" title="1、SimRobotCore (与平台无关)"></a>1、SimRobotCore (与平台无关)</h3><pre><code>Robots        Enviroemnt        Simulates Sensor Readings        Executes Commands</code></pre><h3 id="2、GUI"><a href="#2、GUI" class="headerlink" title="2、GUI"></a>2、GUI</h3><pre><code>展示        交互</code></pre><h3 id="3、Controller-控制模拟机器人的运动"><a href="#3、Controller-控制模拟机器人的运动" class="headerlink" title="3、Controller (控制模拟机器人的运动)"></a>3、Controller (控制模拟机器人的运动)</h3><h3 id="4、SimRobots程序-模拟软件的可执行程序"><a href="#4、SimRobots程序-模拟软件的可执行程序" class="headerlink" title="4、SimRobots程序 (模拟软件的可执行程序)"></a>4、SimRobots程序 (模拟软件的可执行程序)</h3><h3 id="5、Scene描述文件"><a href="#5、Scene描述文件" class="headerlink" title="5、Scene描述文件"></a>5、Scene描述文件</h3><pre><code>描述环境        描述上下文        描述机器人采用XML(RoSiML)描述，而不是代码描述</code></pre><h2 id="SimRobotCore2"><a href="#SimRobotCore2" class="headerlink" title="SimRobotCore2"></a>SimRobotCore2</h2><h2 id="SimRobotEditor"><a href="#SimRobotEditor" class="headerlink" title="SimRobotEditor"></a>SimRobotEditor</h2><h2 id="SimRobotHelper"><a href="#SimRobotHelper" class="headerlink" title="SimRobotHelper"></a>SimRobotHelper</h2><h2 id="SimulatedNAO"><a href="#SimulatedNAO" class="headerlink" title="SimulatedNAO"></a>SimulatedNAO</h2><h2 id="SpecialActions"><a href="#SpecialActions" class="headerlink" title="SpecialActions"></a>SpecialActions</h2><h2 id="URC"><a href="#URC" class="headerlink" title="URC"></a>URC</h2>]]></content>
    
    <summary type="html">
    
      整体框架结构分析(基于Bhuman2013)
    
    </summary>
    
      <category term="home" scheme="https://sisterChen.github.io/categories/home/"/>
    
    
      <category term="Bhuman" scheme="https://sisterChen.github.io/tags/Bhuman/"/>
    
  </entry>
  
  <entry>
    <title>sayings</title>
    <link href="https://sisterChen.github.io/2018/05/17/sayings/"/>
    <id>https://sisterChen.github.io/2018/05/17/sayings/</id>
    <published>2018-05-17T03:49:38.000Z</published>
    <updated>2018-05-22T12:51:41.410Z</updated>
    
    <content type="html"><![CDATA[<h1 id="每个不曾起舞的日子，都是对生命的辜负"><a href="#每个不曾起舞的日子，都是对生命的辜负" class="headerlink" title="每个不曾起舞的日子，都是对生命的辜负"></a>每个不曾起舞的日子，都是对生命的辜负</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;每个不曾起舞的日子，都是对生命的辜负&quot;&gt;&lt;a href=&quot;#每个不曾起舞的日子，都是对生命的辜负&quot; class=&quot;headerlink&quot; title=&quot;每个不曾起舞的日子，都是对生命的辜负&quot;&gt;&lt;/a&gt;每个不曾起舞的日子，都是对生命的辜负&lt;/h1&gt;
      
    
    </summary>
    
      <category term="home" scheme="https://sisterChen.github.io/categories/home/"/>
    
    
      <category term="about" scheme="https://sisterChen.github.io/tags/about/"/>
    
  </entry>
  
  <entry>
    <title>the first post</title>
    <link href="https://sisterChen.github.io/2018/05/13/the-first-post/"/>
    <id>https://sisterChen.github.io/2018/05/13/the-first-post/</id>
    <published>2018-05-13T15:20:47.000Z</published>
    <updated>2018-05-22T14:32:58.192Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这个博客建立的初衷"><a href="#这个博客建立的初衷" class="headerlink" title="这个博客建立的初衷"></a>这个博客建立的初衷</h1><h2 id="把过去一年在NAO机器人团队学过的东西系统整理"><a href="#把过去一年在NAO机器人团队学过的东西系统整理" class="headerlink" title="把过去一年在NAO机器人团队学过的东西系统整理"></a>把过去一年在NAO机器人团队学过的东西系统整理</h2><h3 id="虽然我们因种种原因无法继续参赛了，但我想这些东西是值得以后继续探究的，我也会带着一些疑问去学习相关的专业科目，或许理解会更深入。而且越来越多的学校购买NAO，也将会有越来越多的团队参加RoboCup-SPL这个比赛，这些资料希望会有一些参考价值"><a href="#虽然我们因种种原因无法继续参赛了，但我想这些东西是值得以后继续探究的，我也会带着一些疑问去学习相关的专业科目，或许理解会更深入。而且越来越多的学校购买NAO，也将会有越来越多的团队参加RoboCup-SPL这个比赛，这些资料希望会有一些参考价值" class="headerlink" title="虽然我们因种种原因无法继续参赛了，但我想这些东西是值得以后继续探究的，我也会带着一些疑问去学习相关的专业科目，或许理解会更深入。而且越来越多的学校购买NAO，也将会有越来越多的团队参加RoboCup/SPL这个比赛，这些资料希望会有一些参考价值~~"></a>虽然我们因种种原因无法继续参赛了，但我想这些东西是值得以后继续探究的，我也会带着一些疑问去学习相关的专业科目，或许理解会更深入。而且越来越多的学校购买NAO，也将会有越来越多的团队参加RoboCup/SPL这个比赛，这些资料希望会有一些参考价值~~</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;这个博客建立的初衷&quot;&gt;&lt;a href=&quot;#这个博客建立的初衷&quot; class=&quot;headerlink&quot; title=&quot;这个博客建立的初衷&quot;&gt;&lt;/a&gt;这个博客建立的初衷&lt;/h1&gt;&lt;h2 id=&quot;把过去一年在NAO机器人团队学过的东西系统整理&quot;&gt;&lt;a href=&quot;#把过
      
    
    </summary>
    
      <category term="home" scheme="https://sisterChen.github.io/categories/home/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://sisterChen.github.io/2018/05/13/hello-world/"/>
    <id>https://sisterChen.github.io/2018/05/13/hello-world/</id>
    <published>2018-05-13T02:59:41.958Z</published>
    <updated>2018-05-13T02:59:41.959Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
